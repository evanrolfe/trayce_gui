meta {
  name: Send Bulk SMS
  type: http
  seq: 1
}

get {
  url: https://api.textlocal.in/send/:id
  body: json
  auth: bearer
}

params:query {
  apiKey: secret
  numbers: 998877665
  ~message: hello
}

params:path {
  id: 123
}

headers {
  content-type: application/json
  Authorization: Bearer 123
  ~transaction-id: {{transactionId}}
}

auth:basic {
  username: hello
  password: 1234
}

auth:bearer {
  token: 123
}

body:text {
  This is a text body
}

body:json {
  {
    "hello": "world"
  }
}

body:xml {
  <html></html>
}

body:sparql {
  SELECT * WHERE {
    ?subject ?predicate ?object .
  }
  LIMIT 10
}

body:graphql {
  {
    launchesPast {
      launch_site {
        site_name
      }
      launch_success
    }
  }
}

body:graphql:vars {
  {
    "limit": 5
  }
}

body:form-urlencoded {
  apikey: secret
  numbers: +91998877665
  ~message: hello
}

body:multipart-form {
  apikey: @file(/home/trayce/test.txt)
  ~message: @file(/home/trayce/secrets.txt)
}

body:file {
  file: @file(path/to/file.json) @contentType(application/json)
  file: @file(path/to/file.json) @contentType(application/json)
  ~file: @file(path/to/file2.json) @contentType(application/json)
}

vars:pre-request {
  departingDate: 2020-01-01
  ~returningDate: 2020-01-02
}

vars:post-response {
  token: $res.body.token
  @orderNumber: $res.body.orderNumber
  ~petId: $res.body.id
  ~@transactionId: $res.body.transactionId
}

assert {
  $res.status: 200
  ~$res.body.message: success
}

script:pre-request {
  const foo = 'bar';
}

script:post-response {
  const hello = 'world';
}

tests {
  function onResponse(request, response) {
    expect(response.status).to.equal(200);
  }
}

docs {
  This request needs auth token to be set in the headers.
}
